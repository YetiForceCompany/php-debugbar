(function(f){var d=PhpDebugBar.utils.makecsscls("phpdebugbar-widgets-");var e=PhpDebugBar.Widgets.TemplatesWidget=PhpDebugBar.Widget.extend({className:d("templates"),render:function(){this.$status=f("<div />").addClass(d("status")).appendTo(this.$el);this.$list=new PhpDebugBar.Widgets.ListWidget({itemRenderer:function(h,c){f("<span />").addClass(d("name")).text(c.name).appendTo(h);if(c.render_time_str){f('<span title="Render time" />').addClass(d("render-time")).text(c.render_time_str).appendTo(h)}if(c.memory_str){f('<span title="Memory usage" />').addClass(d("memory")).text(c.memory_str).appendTo(h)}if(typeof(c.param_count)!="undefined"){f('<span title="Parameter count" />').addClass(d("param-count")).text(c.param_count).appendTo(h)}if(typeof(c.type)!="undefined"&&c.type){f('<span title="Type" />').addClass(d("type")).text(c.type).appendTo(h)}if(c.params&&!f.isEmptyObject(c.params)){var a=f('<table><tr><th colspan="2">Params</th></tr></table>').addClass(d("params")).appendTo(h);for(var b in c.params){if(typeof c.params[b]!=="function"){a.append('<tr><td class="'+d("name")+'">'+b+'</td><td class="'+d("value")+'"><pre><code>'+c.params[b]+"</code></pre></td></tr>")}}h.css("cursor","pointer").click(function(){if(a.is(":visible")){a.hide()}else{a.show()}})}}});this.$list.$el.appendTo(this.$el);this.bindAttr("data",function(a){this.$list.set("data",a.templates);this.$status.empty();var b=a.sentence||"templates were rendered";f("<span />").text(a.templates.length+" "+b).appendTo(this.$status);if(a.accumulated_render_time_str){this.$status.append(f('<span title="Accumulated render time" />').addClass(d("render-time")).text(a.accumulated_render_time_str))}if(a.memory_usage_str){this.$status.append(f('<span title="Memory usage" />').addClass(d("memory")).text(a.memory_usage_str))}})}})})(PhpDebugBar.$);